def availableCpus = Runtime.runtime.availableProcessors()

executor {
    name = 'local'
    cpus = availableCpus
}

process {
//    container = 'docker://quay.io/aababc1/metafun:v0.1'
    container = "${projectDir}/../sif_images/metafun_v0.1.sif"
 
//'/data1/leehg/program/apptainer/metafun_v0.1.sif'
    apptainer.enabled = true 
    withName: make_sequence_db {
        container = "${projectDir}/../sif_images/interactive_comparative_annotation_v01.sif"
    }

    withName: run_drep_dereplication {
        container = "${projectDir}/../sif_images/interactive_comparative_annotation_v01.sif"
    }
    withName: run_prokka {
        container = "${projectDir}/../sif_images/prokka_latest.sif"
    }
    withName: sylph_sketch_all {
        container = "${projectDir}/../sif_images/interactive_wms_taxonomy_v01.sif"
    }
    
    withName: sylph_process_all {
        container = "${projectDir}/../sif_images/interactive_wms_taxonomy_v01.sif"
    }   

}

apptainer {
    enabled = true
    ociAutoPull = false
    cacheDir="${projectDir}/../apptainer"
    pullTimeout = 12000000
    apptainer.autoMounts = true
    // use below line
    //runOptions = "--bind ${launchDir}/scripts:/scratch/tools/microbiome_analysis/scripts --bind /data2/leehg/OMD3/Generated_pipeline/scratch/tools/microbiome_analysis/database:/opt/database --bind ${launchDir}/database/humann3/metaphlan:/opt/conda/envs/humann3/lib/python3.10/site-packages/metaphlan/metaphlan_databases -W /${USER}_\$(uuidgen)"
    runOptions = "--bind ${projectDir}/../scripts:/scratch/tools/microbiome_analysis/scripts --bind ${projectDir}/../db:/opt/database --bind ${projectDir}/../db/humann3/metaphlan:/opt/conda/envs/humann3/lib/python3.10/site-packages/metaphlan/metaphlan_databases -W /${USER}_\$(uuidgen)"
//--bind  ${projectDir}/../db/humann3/metaphlan:/opt/conda/envs/humann3/lib/python3.10/site-packages/metaphlan/metaphlan_databases 
    withName: 'HUMANN3_.*|METAPHLAN_.*' {
        runOptions = "--bind ${projectDir}/../db/humann3/metaphlan:/opt/conda/envs/humann3/lib/python3.10/site-packages/metaphlan/metaphlan_databases " + runOptions
    }

//    runOptions = '--bind  scripts:/scratch/tools/microbiome_analysis/scripts  --bind  database/:/opt/database --bind  database/humann3/metaphlan:/opt/conda/envs/humann3/lib/python3.10/site-packages/metaphlan/metaphlan_databases  -W /${USER}_$(uuidgen)'
    //runOptions = '--bind ${projectDir}/../scripts:/scratch/tools/microbiome_analysis/scripts  --bind /data2/leehg/OMD3/Generated_pipeline/scratch/tools/microbiome_analysis/database/:/opt/database --bind ${projectDir}/../database/humann3/metaphlan:/opt/conda/envs/humann3/lib/python3.10/site-packages/metaphlan/metaphlan_databases  -W /${USER}_$(uuidgen)'
}

// automatically change this 



////////////////////////////////
//pipelines execution result report area
def timestamp = new java.util.Date().format('yyyyMMdd_HHmmss')
params {
    report_outdir = 'report_files'
}

profiles {
    GENOME_ASSEMBLY {
        report {
            enabled = true
            file = "${params.report_outdir}/report_GENOME_ASSEMBLY_${timestamp}.html"
        }
        timeline {
            enabled = true
            file = "${params.report_outdir}/timeline_GENOME_ASSEMBLY_${timestamp}.html"
        }
        trace {
            enabled = true
            file = "${params.report_outdir}/trace_GENOME_ASSEMBLY_${timestamp}.txt"
        }
        dag {
            enabled = true
            file = "${params.report_outdir}/dag_GENOME_ASSEMBLY_${timestamp}.svg"
        }
    }

    ASSEMBLY_BINNING {
        report {
            enabled = true
            file = "${params.report_outdir}/report_ASSEMBLY_BINNING_${timestamp}.html"
        }
        timeline {
            enabled = true
            file = "${params.report_outdir}/timeline_ASSEMBLY_BINNING_${timestamp}.html"
        }
        trace {
            enabled = true
            file = "${params.report_outdir}/trace_ASSEMBLY_BINNING_${timestamp}.txt"
        }
        dag {
            enabled = true
            file = "${params.report_outdir}/dag_ASSEMBLY_BINNING_${timestamp}.svg"
        }
    }

    BIN_ASSESSMENT {
        report {
            enabled = true
            file = "${params.report_outdir}/report_BIN_ASSESSMENT_${timestamp}.html"
        }
        timeline {
            enabled = true
            file = "${params.report_outdir}/timeline_BIN_ASSESSMENT_${timestamp}.html"
        }
        trace {
            enabled = true
            file = "${params.report_outdir}/trace_BIN_ASSESSMENT_${timestamp}.txt"
        }
        dag {
            enabled = true
            file = "${params.report_outdir}/dag_BIN_ASSESSMENT_${timestamp}.svg"
        }
    }
    COMPARATIVE_ANNOTATION {
        report {
            enabled = true
            file = "${params.report_outdir}/report_COMPARATIVE_ANNOTATION_${timestamp}.html"
        }
        timeline {
            enabled = true
            file = "${params.report_outdir}/timeline_COMPARATIVE_ANNOTATION_${timestamp}.html"
        }
        trace {
            enabled = true
            file = "${params.report_outdir}/trace_COMPARATIVE_ANNOTATION_${timestamp}.txt"
        }
        dag {
            enabled = true
            file = "${params.report_outdir}/dag_COMPARATIVE_ANNOTATION_${timestamp}.svg"
        }
    }

    RAWREAD_QC {
        report {
            enabled = true
            file = "${params.report_outdir}/report_RAWREAD_QC_${timestamp}.html"
        }
        timeline {
            enabled = true
            file = "${params.report_outdir}/timeline_RAWREAD_QC_${timestamp}.html"
        }
        trace {
            enabled = true
            file = "${params.report_outdir}/trace_RAWREAD_QC_${timestamp}.txt"
        }
        dag {
            enabled = true
            file = "${params.report_outdir}/dag_RAWREAD_QC_${timestamp}.svg"
        }
    }

    WMS_FUNCTION {
        report {
            enabled = true
            file = "${params.report_outdir}/report_WMS_FUNCTION_${timestamp}.html"
        }
        timeline {
            enabled = true
            file = "${params.report_outdir}/timeline_WMS_FUNCTION_${timestamp}.html"
        }
        trace {
            enabled = true
            file = "${params.report_outdir}/trace_WMS_FUNCTION_${timestamp}.txt"
        }
        dag {
            enabled = true
            file = "${params.report_outdir}/dag_WMS_FUNCTION_${timestamp}.svg"
        }
    }
    WMS_TAXONOMY {
        report {
            enabled = true
            file = "${params.report_outdir}/report_WMS_TAXONOMY_${timestamp}.html"
        }
        timeline {
            enabled = true
            file = "${params.report_outdir}/timeline_WMS_TAXONOMY_${timestamp}.html"
        }
        trace {
            enabled = true
            file = "${params.report_outdir}/trace_WMS_TAXONOMY_${timestamp}.txt"
        }
        dag {
            enabled = true
            file = "${params.report_outdir}/dag_WMS_TAXONOMY_${timestamp}.svg"
        }
    }
}
//pipelines execution result report area
////////////////////////////////


